name: Backend Build
on:
  push:
    branch: [master]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Open VPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Create config.ovpn
        run: |
          mkdir .github/workflows/vpn
          echo -e "remote $VPN_URL\ncomp-lzo\nnobind\ndev tun\nproto udp\nport $VPN_PORT\nauth-nocache\npersist-key\npersist-tun\nclient\nauth-user-pass $VPN_PW_PATH\n$VPN_CA_CRT" > .github/workflows/vpn/config.ovpn
        env:
          VPN_CA_CRT: ${{ secrets.VPN_CA_CRT }}
          VPN_PORT: ${{ secrets.VPN_PORT }}
          VPN_URL: ${{ secrets.VPN_URL }}

      - name: Create password file
        run: |
          echo -e "$VPN_USERNAME\n$VPN_PASSWORD" > .github/workflows/vpn/dnetcloud.pw
        env:
          VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
          VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}

      - name: Connect VPN
        run: sudo openvpn --config .github/workflows/vpn/config.ovpn --auth-user-pass .github/workflows/vpn/dnetcloud.pw --daemon

      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: whoami

      - name: kill vpn
        if: always()
        run: sudo killall openvpn
